<?xml version="1.0" encoding="UTF-8"?><testrun name="BankTest" project="BankKataTDD" tests="26" started="26" failures="1" errors="0" ignored="0">
  <testsuite name="main.BankTest" time="0.301">
    <testcase name="shouldReturn0AfterRetrait0" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnTransactionListWhenRetraitTwice" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn400WhenNoIbans" classname="main.BankTest" time="0.001"/>
    <testcase name="shouldReturn400WhenAmountNotPresent" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn1000AfterRetrait" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn400WhenTransfertNeg200ToIbanTo" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn200WhenTestProd" classname="main.BankTest" time="0.295">
      <failure>java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at main.BankTest.shouldReturn200WhenTestProd(BankTest.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.mockito.internal.runners.JUnit45AndHigherRunnerImpl.run(JUnit45AndHigherRunnerImpl.java:37)
	at org.mockito.runners.MockitoJUnitRunner.run(MockitoJUnitRunner.java:62)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)

</failure>
    </testcase>
    <testcase name="shouldReturn400WhenNoFields" classname="main.BankTest" time="0.001"/>
    <testcase name="shouldReturn1000AfterDepot" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnNeg500AfterRetrait" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn200WhenTransfert0ToIbanTo" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnTransactionListSizeIs2WhenDepotTwice" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnTransactionListWhenRetrait" classname="main.BankTest" time="0.001"/>
    <testcase name="shouldReturn0AfterDepot" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnTransactionListWhenRetraitTwicee" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnNullList" classname="main.BankTest" time="0.001"/>
    <testcase name="shouldReturnTransactionListWhenDepot" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnValue500" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn0EvenIfDepotIsNegatif" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn0" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn0AfterDepotRetrait" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnNeg500AfterDepotRetrait" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnNeg500AfterDepotRetraitFloat" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturnTransactionListWhenDepotTwice" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn0AfterRetraitNeg500" classname="main.BankTest" time="0.0"/>
    <testcase name="shouldReturn500AfterDepotRetrait" classname="main.BankTest" time="0.001"/>
  </testsuite>
</testrun>
